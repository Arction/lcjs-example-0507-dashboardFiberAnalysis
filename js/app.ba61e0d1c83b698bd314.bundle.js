(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,i)=>{const a=i(89),r=i(863),{lightningChart:s,AxisTickStrategies:n,emptyLine:o,emptyFill:l,AreaSeriesTypes:m,ColorRGBA:c,regularColorSteps:d,PalettedFill:p,LUT:g,emptyTick:y,UIElementBuilders:u,UIOrigins:S,synchronizeAxisIntervals:h,Themes:D}=a,{createProgressiveTraceGenerator:F}=r,T={opticalFibreDistanceStep:10,opticalFibreDistanceStart:0,opticalFibreDistanceEnd:3200,timeStep:1e3,timeStart:new Date("2021-06-17T08:54:04").getTime(),timeEnd:new Date("2021-06-17T08:54:38").getTime()},w=T.timeStart,b=new Promise((async e=>{const t=Math.ceil((T.timeEnd-T.timeStart)/T.timeStep),i=Math.ceil((T.opticalFibreDistanceEnd-T.opticalFibreDistanceStart)/T.opticalFibreDistanceStep),a=await Promise.all(new Array(t).fill(0).map(((e,t)=>F().setNumberOfPoints(i).generate().toPromise().then((e=>e.map((e=>Math.abs(100*e.y)))))))),r=new Array(i).fill(0).map(((e,t)=>({x:T.opticalFibreDistanceStart+t*T.opticalFibreDistanceStep,y:a.reduce(((e,i)=>e+i[t]),0)})));e({traceDataArray:a,areaData:r})})),f=s().Dashboard({theme:D[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0,numberOfColumns:1,numberOfRows:2}).setRowHeight(0,.3).setRowHeight(1,.7),x=f.createChartXY({rowIndex:0,columnIndex:0}).setTitle("Distance Intensity Chart").setPadding({right:24}),k=x.getDefaultAxisX().setTickStrategy(n.Empty).setStrokeStyle(o),I=x.getDefaultAxisY().setTitle("Intensity Sum"),A=f.createChartXY({rowIndex:1,columnIndex:0}).setTitleFillStyle(l).setPadding({right:24}),P=A.getDefaultAxisX().setTitle("Optical Fiber Distance (m)"),C={hour:"numeric",minute:"numeric",second:"numeric"},R=A.getDefaultAxisY().setTitle("Time").setTickStrategy(n.DateTime,(e=>e.setDateOrigin(new Date(w)).setGreatTickStyle(y).setMinorTickStyle(y).setFormattingDay({},C,{}).setFormattingDecade(C,{}).setFormattingHour({},C,{}).setFormattingMilliSecond({},C).setFormattingMinute({},C,{}).setFormattingMonth({},C,{}).setFormattingSecond({},C).setFormattingWeek({},C,{}).setFormattingYear(C,{})));h(P,k),[I,R].forEach((e=>e.setThickness(100)));const O=f.getTheme(),U=new g({interpolate:!1,steps:[{value:0,color:c(0,0,0,0)},...d(200,600,O.examples.intensityColorPalette)]});b.then((e=>{const{traceDataArray:t,areaData:i}=e,a=(x.addAreaSeries({type:m.Positive}).add(i).setCursorResultTableFormatter(((e,t,i,a)=>e.addRow("Intensity sum:","",a.toFixed(1)).addRow("Optical fiber distance:","",P.formatValue(i)+" m"))),{columns:t[0].length,rows:t.length,start:{x:T.opticalFibreDistanceStart,y:T.timeStart-w},step:{x:T.opticalFibreDistanceStep,y:T.timeStep},dataOrder:"rows"});A.addHeatmapGridSeries(a).setIntensityInterpolation("disabled").invalidateIntensityValues(t).setFillStyle(new p({lookUpProperty:"value",lut:U})).setWireframeStyle(o).setCursorResultTableFormatter(((e,t,i)=>e.addRow("Intensity:","",i.intensity.toFixed(1)).addRow("Optical fiber distance:","",P.formatValue(i.x)+" m").addRow("Time:","",R.formatValue(i.y)))),P.fit(!1),R.fit(!1),k.fit(!1),I.fit(!1),A.setPadding({bottom:64}),A.addUIElement(u.LUTRange).setLUT(U).setLUTLength(500).setLookUpUnit("Intensity").setPosition({x:50,y:0}).setOrigin(S.CenterBottom).setAutoDispose({type:"max-width",maxWidth:.8}).setBackground((e=>e.setFillStyle(l).setStrokeStyle(o)))}))}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);