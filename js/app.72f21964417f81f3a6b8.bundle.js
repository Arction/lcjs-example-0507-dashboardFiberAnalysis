(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,i)=>{const a=i(377),s=i(613),{lightningChart:r,AxisTickStrategies:n,emptyLine:o,emptyFill:l,AreaSeriesTypes:c,ColorRGBA:m,regularColorSteps:p,PalettedFill:d,LUT:y,emptyTick:S,UIElementBuilders:h,UIOrigins:g,Themes:u}=a,{createProgressiveTraceGenerator:D}=s,T={opticalFibreDistanceStep:10,opticalFibreDistanceStart:0,opticalFibreDistanceEnd:3200,timeStep:1e3,timeStart:new Date("2021-06-17T08:54:04").getTime(),timeEnd:new Date("2021-06-17T08:54:38").getTime()},b=T.timeStart,w=new Promise((async e=>{const t=Math.ceil((T.timeEnd-T.timeStart)/T.timeStep),i=Math.ceil((T.opticalFibreDistanceEnd-T.opticalFibreDistanceStart)/T.opticalFibreDistanceStep),a=await Promise.all(new Array(t).fill(0).map(((e,t)=>D().setNumberOfPoints(i).generate().toPromise().then((e=>e.map((e=>Math.abs(100*e.y)))))))),s=new Array(i).fill(0).map(((e,t)=>({x:T.opticalFibreDistanceStart+t*T.opticalFibreDistanceStep,y:a.reduce(((e,i)=>e+i[t]),0)})));e({traceDataArray:a,areaData:s})})),x=r({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({theme:u[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("Distance Intensity Chart");x.yAxis.dispose();const F=x.addAxisY({iStack:1}).setTitle("Intensity Sum").setLength({pixels:200}).setMargins(10,0),U=(x.axisX.setTitle("Optical Fiber Distance (m)"),x.addAxisY({iStack:0}).setTitle("Time").setTickStrategy(n.DateTime,(e=>e.setDateOrigin(new Date(b)).setGreatTickStyle(S)))),k=x.getTheme(),A=new y({interpolate:!1,steps:[{value:0,color:m(0,0,0,0)},...p(200,600,k.examples.intensityColorPalette)]});w.then((e=>{const{traceDataArray:t,areaData:i}=e;x.setCursorFormatting(((e,t,i)=>{const s=i.find((e=>e.series===a)),n=i.find((e=>e.series===r));if(s&&n)return[["Optical fiber distance","",`${Math.round(s.x)} m`],[s.series,"",s.axisY.formatValue(s.y)],[n.series,""],["",n.axisY.formatValue(n.y)],["Intensity","",n.intensity.toFixed(1)]]}));const a=x.addAreaSeries({type:c.Positive,yAxis:F}).add(i),s={columns:t[0].length,rows:t.length,dataOrder:"rows",yAxis:U},r=x.addHeatmapGridSeries(s).setStart({x:T.opticalFibreDistanceStart,y:T.timeStart-b}).setStep({x:T.opticalFibreDistanceStep,y:T.timeStep}).setIntensityInterpolation("disabled").invalidateIntensityValues(t).setFillStyle(new d({lookUpProperty:"value",lut:A})).setWireframeStyle(o);x.setPadding({bottom:64}),x.addUIElement(h.LUTRange).setLUT(A).setLUTLength(500).setLookUpUnit("Intensity").setPosition({x:50,y:0}).setOrigin(g.CenterBottom).setAutoDispose({type:"max-width",maxWidth:.8}).setBackground((e=>e.setFillStyle(l).setStrokeStyle(o)))}))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);